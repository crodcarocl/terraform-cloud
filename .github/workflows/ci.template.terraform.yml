name: "Terraform Pipeline"

on:
  workflow_call:
    secrets:
      SBX_OIDC_ARN:
        description: 'AWS OIDC ARN for Sandbox'
        required: true

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  terraform:
    name: "Terrfaorm running on: ${{matrix.runner}} - for env: ${{ matrix.environment }}"
    runs-on: [ '${{ matrix.runner }}']
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      matrix:
         include:
<<<<<<< HEAD
           - environment: sandbox
             runner: ubuntu-latest
             aimarn: SBX_OIDC_ARN
             region: us-west-2
=======
           - environment: development
             runner: ubuntu-latest
             aimarn: SBX_OIDC_ARN
>>>>>>> ef3c5b57063096ef907dcfe4afee0c0753264958
          #  - environment: quality
          #    runner: ubuntu-18.04
          #    aimarn: TBD
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Format
        id: fmt
        #run: terraform fmt -check
        run: echo "Soon! :D"

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=${{ matrix.environment }}/backend.tfvars -upgrade=true -no-color -input=false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets[matrix.aimarn] }}
          role-session-name: TerraformSession
<<<<<<< HEAD
          aws-region: ${{ matrix.region }}
=======
          aws-region: us-east-1
>>>>>>> ef3c5b57063096ef907dcfe4afee0c0753264958

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          terraform plan -out=${{ github.sha }}-${{ matrix.environment }}.tfplan -input=false -var-file=${{ matrix.environment }}/terraform.tfvars -no-color
          terraform show -json ${{ github.sha }}-${{ matrix.environment }}.tfplan > ${{ github.sha }}-${{ matrix.environment }}.json
        continue-on-error: false

      - name: 'Upload Terraform Plan Output'
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-${{ matrix.environment }}-${{ github.sha }}
          path: ${{ github.sha }}-${{ matrix.environment }}.*
          if-no-files-found: error
          retention-days: 5

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var-file=${{ matrix.environment }}/terraform.tfvars